# Workflow
workflows:
  version: 2
  test__dockerhub:
    jobs:
      - test
      - build_docker_latest:
          requires:
            - test
          filters:
            branches:
              only: master
            tags:
                only: /.*/
# Tasks
version: 2
jobs:
  # Tests
  test:
    docker:
      - image: python:3.6-stretch
      - image: tuxeatpi/crossbar:cpy3-17.9.2
      - image: quay.io/coreos/etcd
        command: 
        - /usr/local/bin/etcd
        - --data-dir=/etcd-data
        - --listen-client-urls=http://0.0.0.0:2379
        - --advertise-client-urls=http://127.0.0.1:2379
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-{{ checksum "test_requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            apt-get update && apt-get install -y swig make libatlas-base-dev portaudio19-dev
            # apt-get update && apt-get install -y kmod linux-image-amd64
            # ln -s /lib/modules/4.9.0-3-amd64 /lib/modules/`uname -r`
            python3 -m venv venv
            . venv/bin/activate
            make dev-build-snowboy
            pip install --exists-action s -r requirements.txt --upgrade --force
            pip install -r test_requirements.txt --upgrade
            pip install codeclimate-test-reporter
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            #modprobe snd-dummy fake_buffer=0
            python setup.py develop
            pycodestyle --max-line-length=100 --exclude snowboydetect.py tuxeatpi_hotword_kittai
            pylint --rcfile=.pylintrc -r no --ignore=snowboydetect.py tuxeatpi_hotword_kittai
            pytest --html=pytest/report.html --self-contained-html --junit-xml=pytest/junit.xml --cov=tuxeatpi_hotword_kittai/ --cov-report=term --cov-report=html:pytest/coverage/html --cov-report=xml:pytest/coverage/coverage.xml -p no:pytest_wampy tests
            coverage combine || true
            coverage report --include='*/tuxeatpi_hotword_kittai/*'
      - store_artifacts:
          path: pytest/
          destination: test_results/
      # Useless for now waiting for update from circleCI UI
      - store_test_results:
          path: pytest/
  # Trigger dockerhub
  build_docker_latest:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Push to Docker Hub
          command: |
            docker build -t tuxeatpi/hotword-kittai:latest -f Dockerfile .
            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
            docker push tuxeatpi/hotword-kittai:latest
